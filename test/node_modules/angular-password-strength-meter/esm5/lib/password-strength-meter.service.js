import { __decorate } from "tslib";
import { Injectable } from '@angular/core';
import * as zxcvbn_ from 'zxcvbn';
var zxcvbn = zxcvbn_;
var PasswordStrengthMeterService = /** @class */ (function () {
    function PasswordStrengthMeterService() {
    }
    /**
     *  this will return the password strength score in number
     *  0 - too guessable
     *  1 - very guessable
     *  2 - somewhat guessable
     *  3 - safely unguessable
     *  4 - very unguessable
     *
     *  @param password - Password
     */
    PasswordStrengthMeterService.prototype.score = function (password) {
        var result = zxcvbn(password);
        return result.score;
    };
    /**
     * this will return the password strength score with feedback messages
     * return type { score: number; feedback: { suggestions: string[]; warning: string } }
     *
     * @param password - Password
     */
    PasswordStrengthMeterService.prototype.scoreWithFeedback = function (password) {
        var result = zxcvbn(password);
        return { score: result.score, feedback: result.feedback };
    };
    PasswordStrengthMeterService = __decorate([
        Injectable()
    ], PasswordStrengthMeterService);
    return PasswordStrengthMeterService;
}());
export { PasswordStrengthMeterService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFzc3dvcmQtc3RyZW5ndGgtbWV0ZXIuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FuZ3VsYXItcGFzc3dvcmQtc3RyZW5ndGgtbWV0ZXIvIiwic291cmNlcyI6WyJsaWIvcGFzc3dvcmQtc3RyZW5ndGgtbWV0ZXIuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUUzQyxPQUFPLEtBQUssT0FBTyxNQUFNLFFBQVEsQ0FBQztBQUVsQyxJQUFNLE1BQU0sR0FBRyxPQUFPLENBQUM7QUFHdkI7SUFDRTtJQUFlLENBQUM7SUFFaEI7Ozs7Ozs7OztPQVNHO0lBQ0gsNENBQUssR0FBTCxVQUFNLFFBQVE7UUFDWixJQUFNLE1BQU0sR0FBRyxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDaEMsT0FBTyxNQUFNLENBQUMsS0FBSyxDQUFDO0lBQ3RCLENBQUM7SUFFRDs7Ozs7T0FLRztJQUNILHdEQUFpQixHQUFqQixVQUFrQixRQUFRO1FBQ3hCLElBQU0sTUFBTSxHQUFHLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUNoQyxPQUFPLEVBQUUsS0FBSyxFQUFFLE1BQU0sQ0FBQyxLQUFLLEVBQUUsUUFBUSxFQUFFLE1BQU0sQ0FBQyxRQUFRLEVBQUUsQ0FBQztJQUM1RCxDQUFDO0lBM0JVLDRCQUE0QjtRQUR4QyxVQUFVLEVBQUU7T0FDQSw0QkFBNEIsQ0E0QnhDO0lBQUQsbUNBQUM7Q0FBQSxBQTVCRCxJQTRCQztTQTVCWSw0QkFBNEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCAqIGFzIHp4Y3Zibl8gZnJvbSAnenhjdmJuJztcblxuY29uc3QgenhjdmJuID0genhjdmJuXztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFBhc3N3b3JkU3RyZW5ndGhNZXRlclNlcnZpY2Uge1xuICBjb25zdHJ1Y3RvcigpIHt9XG5cbiAgLyoqXG4gICAqICB0aGlzIHdpbGwgcmV0dXJuIHRoZSBwYXNzd29yZCBzdHJlbmd0aCBzY29yZSBpbiBudW1iZXJcbiAgICogIDAgLSB0b28gZ3Vlc3NhYmxlXG4gICAqICAxIC0gdmVyeSBndWVzc2FibGVcbiAgICogIDIgLSBzb21ld2hhdCBndWVzc2FibGVcbiAgICogIDMgLSBzYWZlbHkgdW5ndWVzc2FibGVcbiAgICogIDQgLSB2ZXJ5IHVuZ3Vlc3NhYmxlXG4gICAqXG4gICAqICBAcGFyYW0gcGFzc3dvcmQgLSBQYXNzd29yZFxuICAgKi9cbiAgc2NvcmUocGFzc3dvcmQpOiBudW1iZXIge1xuICAgIGNvbnN0IHJlc3VsdCA9IHp4Y3ZibihwYXNzd29yZCk7XG4gICAgcmV0dXJuIHJlc3VsdC5zY29yZTtcbiAgfVxuXG4gIC8qKlxuICAgKiB0aGlzIHdpbGwgcmV0dXJuIHRoZSBwYXNzd29yZCBzdHJlbmd0aCBzY29yZSB3aXRoIGZlZWRiYWNrIG1lc3NhZ2VzXG4gICAqIHJldHVybiB0eXBlIHsgc2NvcmU6IG51bWJlcjsgZmVlZGJhY2s6IHsgc3VnZ2VzdGlvbnM6IHN0cmluZ1tdOyB3YXJuaW5nOiBzdHJpbmcgfSB9XG4gICAqXG4gICAqIEBwYXJhbSBwYXNzd29yZCAtIFBhc3N3b3JkXG4gICAqL1xuICBzY29yZVdpdGhGZWVkYmFjayhwYXNzd29yZCk6IHsgc2NvcmU6IG51bWJlcjsgZmVlZGJhY2s6IHsgc3VnZ2VzdGlvbnM6IHN0cmluZ1tdOyB3YXJuaW5nOiBzdHJpbmcgfSB9IHtcbiAgICBjb25zdCByZXN1bHQgPSB6eGN2Ym4ocGFzc3dvcmQpO1xuICAgIHJldHVybiB7IHNjb3JlOiByZXN1bHQuc2NvcmUsIGZlZWRiYWNrOiByZXN1bHQuZmVlZGJhY2sgfTtcbiAgfVxufVxuIl19