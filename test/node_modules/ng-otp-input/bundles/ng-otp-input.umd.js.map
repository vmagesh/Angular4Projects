{"version":3,"file":"ng-otp-input.umd.js.map","sources":["ng://ng-otp-input/lib/pipes/keys.pipe.ts","ng://ng-otp-input/lib/components/ng-otp-input/ng-otp-input.component.ts","ng://ng-otp-input/lib/directives/number-only.directive.ts","ng://ng-otp-input/lib/ng-otp-input.module.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'keys'\r\n})\r\nexport class KeysPipe implements PipeTransform {\r\n  transform(value: any): string[] {\r\n    return Object.keys(value)\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  AfterViewInit\r\n} from '@angular/core';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { KeysPipe } from '../../pipes/keys.pipe';\r\nimport { Config } from '../../models/config';\r\n@Component({\r\n  // tslint:disable-next-line: component-selector\r\n  selector: 'ng-otp-input',\r\n  templateUrl: './ng-otp-input.component.html',\r\n  styleUrls: ['./ng-otp-input.component.scss']\r\n})\r\nexport class NgOtpInputComponent implements OnInit, AfterViewInit {\r\n  @Input() config: Config = { length: 4 };\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() onInputChange = new EventEmitter<string>();\r\n  otpForm: FormGroup;\r\n  inputControls: FormControl[] = new Array(this.config.length);\r\n  componentKey =\r\n    Math.random()\r\n      .toString(36)\r\n      .substring(2) + new Date().getTime().toString(36);\r\n  inputType: string;\r\n  constructor(private keysPipe: KeysPipe) {}\r\n\r\n  ngOnInit() {\r\n    this.otpForm = new FormGroup({});\r\n    for (let index = 0; index < this.config.length; index++) {\r\n      this.otpForm.addControl(this.getControlName(index), new FormControl());\r\n    }\r\n    this.inputType = this.getInputType();\r\n    \r\n  }\r\n  ngAfterViewInit(): void {\r\n    if (!this.config.disableAutoFocus) {\r\n      const containerItem = document.getElementById(`c_${this.componentKey}`);\r\n      if (containerItem) {\r\n        containerItem.addEventListener('paste', (evt) => this.handlePaste(evt));\r\n        const ele: any = containerItem.getElementsByClassName('otp-input')[0];\r\n        if (ele && ele.focus) {\r\n          ele.focus();\r\n        }\r\n      }\r\n    }\r\n  }\r\n  private getControlName(idx) {\r\n    return `ctrl_${idx}`;\r\n  }\r\n\r\n  ifLeftArrow(event) {\r\n    return this.ifKeyCode(event, 37);\r\n  }\r\n\r\n\r\n  ifRightArrow(event) {\r\n    return this.ifKeyCode(event, 39);\r\n  }\r\n\r\n  ifBackspaceOrDelete(event) {\r\n    return (\r\n      event.key === 'Backspace' ||\r\n      event.key === 'Delete' ||\r\n      this.ifKeyCode(event, 8) ||\r\n      this.ifKeyCode(event, 46)\r\n    );\r\n  }\r\n\r\n  ifKeyCode(event, targetCode) {\r\n    const key = event.keyCode || event.charCode;\r\n    // tslint:disable-next-line: triple-equals\r\n    return key == targetCode ? true : false;\r\n  }\r\n  onKeyDown($event) {\r\n    var isSpace=this.ifKeyCode($event,32)\r\n    if (isSpace) {// prevent space\r\n    return false;\r\n    }\r\n  }\r\n\r\n  onKeyUp($event, inputIdx) {\r\n    const nextInputId = this.appendKey(`otp_${inputIdx + 1}`);\r\n    const prevInputId = this.appendKey(`otp_${inputIdx - 1}`);\r\n    if (this.ifRightArrow($event)) {\r\n      this.setSelected(nextInputId);\r\n      return;\r\n    }\r\n    if (this.ifLeftArrow($event)) {\r\n      this.setSelected(prevInputId);\r\n      return;\r\n    }\r\n    const isBackspace = this.ifBackspaceOrDelete($event);\r\n    if (isBackspace && !$event.target.value) {\r\n      this.setSelected(prevInputId);\r\n      this.rebuildValue();\r\n      return;\r\n    }\r\n    if (!$event.target.value) {\r\n      return;\r\n    }\r\n    if (this.ifValidEntry($event)) {\r\n      this.setSelected(nextInputId);\r\n    }\r\n    this.rebuildValue();\r\n  }\r\n\r\n  appendKey(id) {\r\n    return `${id}_${this.componentKey}`;\r\n  }\r\n\r\n  setSelected(eleId) {\r\n    this.focusTo(eleId);\r\n    const ele: any = document.getElementById(eleId);\r\n    if (ele && ele.setSelectionRange) {\r\n      setTimeout(() => {\r\n        ele.setSelectionRange(0, 1);\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  ifValidEntry(event) {\r\n    const inp = String.fromCharCode(event.keyCode);\r\n    const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n    return (\r\n      isMobile ||\r\n      /[a-zA-Z0-9-_]/.test(inp) ||\r\n      (this.config.allowKeyCodes &&\r\n        this.config.allowKeyCodes.includes(event.keyCode)) ||\r\n      (event.keyCode >= 96 && event.keyCode <= 105)\r\n    );\r\n  }\r\n\r\n  focusTo(eleId) {\r\n    const ele: any = document.getElementById(eleId);\r\n    if (ele) {\r\n      ele.focus();\r\n    }\r\n  }\r\n\r\n  // method to set component value\r\n  setValue(value: any) {\r\n    if (this.config.allowNumbersOnly && isNaN(value)) {\r\n        return;\r\n    }\r\n    this.otpForm.reset();\r\n     if (!value) {\r\n       this.rebuildValue();\r\n       return;\r\n     }\r\n     value = value.toString().replace(/\\s/g, ''); // remove whitespace\r\n     Array.from(value).forEach((c, idx) => {\r\n          if (this.otpForm.get(this.getControlName(idx))) {\r\n            this.otpForm.get(this.getControlName(idx)).setValue(c);\r\n          }\r\n     });\r\n     const containerItem = document.getElementById(`c_${this.componentKey}`);\r\n     var indexOfElementToFocus=value.length < this.config.length ? value.length : (this.config.length - 1);\r\n     let ele:any = containerItem.getElementsByClassName('otp-input')[indexOfElementToFocus];\r\n     if(ele && ele.focus){\r\n       ele.focus();\r\n     }\r\n     this.rebuildValue();\r\n  }\r\n\r\n\r\n  rebuildValue() {\r\n    let val = '';\r\n    this.keysPipe.transform(this.otpForm.controls).forEach(k => {\r\n      if (this.otpForm.controls[k].value) {\r\n        val += this.otpForm.controls[k].value;\r\n      }\r\n    });\r\n    this.onInputChange.emit(val);\r\n  }\r\n  getInputType():string{\r\n    return this.config.isPasswordInput \r\n      ? 'password' \r\n      : this.config.allowNumbersOnly \r\n        ? 'tel'\r\n        : 'text';\r\n  }\r\n  handlePaste(e) {\r\n    // Get pasted data via clipboard API\r\n    let clipboardData = e.clipboardData || window['clipboardData'];\r\n    if(clipboardData){\r\n     var pastedData =clipboardData.getData('Text');\r\n    }\r\n    // Stop data actually being pasted into div\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    if (!pastedData) {\r\n      return;\r\n    }\r\n    this.setValue(pastedData);\r\n  }\r\n}\r\n","import { Directive, ElementRef, Renderer2, Input } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[numberOnly]'\r\n})\r\nexport class NumberOnlyDirective {\r\n  @Input() disabledNumberOnly:boolean;\r\n  constructor (private _elRef: ElementRef, private _renderer: Renderer2) { }\r\n\r\n  ngOnInit() {\r\n    if(!this.disabledNumberOnly){\r\n      this._renderer.setAttribute(this._elRef.nativeElement, 'onkeypress', 'return (event.charCode >= 48 && event.charCode <= 57) || event.charCode == 0');\r\n    }\r\n  }\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { NgOtpInputComponent } from './components/ng-otp-input/ng-otp-input.component';\r\nimport { KeysPipe } from './pipes/keys.pipe';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NumberOnlyDirective } from './directives/number-only.directive';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [NgOtpInputComponent, KeysPipe, NumberOnlyDirective],\r\n  exports: [NgOtpInputComponent],\r\n  providers: [KeysPipe]\r\n})\r\nexport class NgOtpInputModule { }\r\n"],"names":["Pipe","EventEmitter","FormGroup","FormControl","Component","Input","Output","Directive","ElementRef","Renderer2","NgModule","CommonModule","FormsModule","ReactiveFormsModule"],"mappings":"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"}
