import { __spread, __decorate, __metadata } from 'tslib';
import deepEqual from 'fast-deep-equal';
import { EventEmitter, ElementRef, Input, Output, Component, NgModule } from '@angular/core';
import { Calendar } from '@fullcalendar/core';

var hasOwnProperty = Object.prototype.hasOwnProperty;
/*
Really simple clone utility. Only copies plain arrays, objects, and Dates. Transfers everything else as-is.
Wanted to use a third-party lib, but none did exactly this.
*/
function deepCopy(input) {
    if (Array.isArray(input)) {
        return input.map(deepCopy);
    }
    else if (input instanceof Date) {
        return new Date(input.valueOf());
    }
    else if (typeof input === 'object' && input) { // non-null object
        return mapHash(input, deepCopy);
    }
    else { // everything else (null, function, etc)
        return input;
    }
}
function mapHash(input, func) {
    var output = {};
    for (var key in input) {
        if (hasOwnProperty.call(input, key)) {
            output[key] = func(input[key], key);
        }
    }
    return output;
}

/*
the docs point to this file as an index of options.
when this files is moved, update the docs.
*/
var INPUT_NAMES = [
    'header',
    'footer',
    'customButtons',
    'buttonIcons',
    'themeSystem',
    'bootstrapFontAwesome',
    'firstDay',
    'dir',
    'weekends',
    'hiddenDays',
    'fixedWeekCount',
    'weekNumbers',
    'weekNumbersWithinDays',
    'weekNumberCalculation',
    'businessHours',
    'showNonCurrentDates',
    'height',
    'contentHeight',
    'aspectRatio',
    'handleWindowResize',
    'windowResizeDelay',
    'eventLimit',
    'eventLimitClick',
    'timeZone',
    'now',
    'defaultView',
    'allDaySlot',
    'allDayText',
    'slotDuration',
    'slotLabelFormat',
    'slotLabelInterval',
    'snapDuration',
    'scrollTime',
    'minTime',
    'maxTime',
    'slotEventOverlap',
    'listDayFormat',
    'listDayAltFormat',
    'noEventsMessage',
    'defaultDate',
    'nowIndicator',
    'visibleRange',
    'validRange',
    'dateIncrement',
    'dateAlignment',
    'duration',
    'dayCount',
    'locales',
    'locale',
    'eventTimeFormat',
    'columnHeader',
    'columnHeaderFormat',
    'columnHeaderText',
    'columnHeaderHtml',
    'titleFormat',
    'weekLabel',
    'displayEventTime',
    'displayEventEnd',
    'eventLimitText',
    'dayPopoverFormat',
    'navLinks',
    'selectable',
    'selectMirror',
    'selectMinDistance',
    'unselectAuto',
    'unselectCancel',
    'defaultAllDayEventDuration',
    'defaultTimedEventDuration',
    'cmdFormatter',
    'defaultRangeSeparator',
    'selectConstraint',
    'selectOverlap',
    'selectAllow',
    'editable',
    'eventStartEditable',
    'eventDurationEditable',
    'eventConstraint',
    'eventOverlap',
    'eventAllow',
    'eventClassName',
    'eventClassNames',
    'eventBackgroundColor',
    'eventBorderColor',
    'eventTextColor',
    'eventColor',
    'events',
    'eventSources',
    'allDayDefault',
    'startParam',
    'endParam',
    'lazyFetching',
    'nextDayThreshold',
    'eventOrder',
    'rerenderDelay',
    'dragRevertDuration',
    'dragScroll',
    'longPressDelay',
    'eventLongPressDelay',
    'droppable',
    'dropAccept',
    'eventDataTransform',
    'allDayMaintainDuration',
    'eventResizableFromStart',
    'timeGridEventMinHeight',
    'allDayHtml',
    'eventDragMinDistance',
    'eventSourceFailure',
    'eventSourceSuccess',
    'forceEventDuration',
    'progressiveEventRendering',
    'selectLongPressDelay',
    'selectMinDistance',
    'timeZoneParam',
    'titleRangeSeparator',
    // compound OptionsInput...
    'buttonText',
    'views',
    'plugins',
    // scheduler...
    'schedulerLicenseKey',
    'resources',
    'resourceLabelText',
    'resourceOrder',
    'filterResourcesWithEvents',
    'resourceText',
    'resourceGroupField',
    'resourceGroupText',
    'resourceAreaWidth',
    'resourceColumns',
    'resourcesInitiallyExpanded',
    'slotWidth',
    'datesAboveResources',
    'googleCalendarApiKey',
    'refetchResourcesOnNavigate',
    'eventResourceEditable'
];
var INPUT_IS_DEEP = {
    header: true,
    footer: true,
    events: true,
    eventSources: true,
    resources: true
};
var OUTPUT_NAMES = [
    'windowResize',
    'dateClick',
    'eventClick',
    'navLinkDayClick',
    'navLinkWeekClick',
    'eventMouseEnter',
    'eventMouseLeave',
    'select',
    'unselect',
    'loading',
    'eventPositioned',
    'eventDragStart',
    'eventDragStop',
    'eventDrop',
    'eventResizeStart',
    'eventResizeStop',
    'eventResize',
    'drop',
    'eventReceive',
    'eventLeave',
    '_destroyed',
    // TODO: make these inputs...
    'viewSkeletonRender',
    'viewSkeletonDestroy',
    'datesRender',
    'datesDestroy',
    'dayRender',
    'eventRender',
    'eventDestroy',
    'resourceRender'
];

var FullCalendarComponent = /** @class */ (function () {
    function FullCalendarComponent(element) {
        this.element = element;
        this.dirtyProps = {};
        this.deepCopies = {}; // holds frozen states
        this.windowResize = new EventEmitter();
        this.dateClick = new EventEmitter();
        this.eventClick = new EventEmitter();
        this.eventMouseEnter = new EventEmitter();
        this.eventMouseLeave = new EventEmitter();
        this.select = new EventEmitter();
        this.unselect = new EventEmitter();
        this.loading = new EventEmitter();
        this.eventPositioned = new EventEmitter();
        this.eventDragStart = new EventEmitter();
        this.eventDragStop = new EventEmitter();
        this.eventDrop = new EventEmitter();
        this.eventResizeStart = new EventEmitter();
        this.eventResizeStop = new EventEmitter();
        this.eventResize = new EventEmitter();
        this.drop = new EventEmitter();
        this.eventReceive = new EventEmitter();
        this.eventLeave = new EventEmitter();
        this._destroyed = new EventEmitter();
        this.navLinkDayClick = new EventEmitter();
        this.navLinkWeekClick = new EventEmitter();
        // TODO: make these inputs...
        this.viewSkeletonRender = new EventEmitter();
        this.viewSkeletonDestroy = new EventEmitter();
        this.datesRender = new EventEmitter();
        this.datesDestroy = new EventEmitter();
        this.dayRender = new EventEmitter();
        this.eventRender = new EventEmitter();
        this.eventDestroy = new EventEmitter();
        this.resourceRender = new EventEmitter();
    }
    FullCalendarComponent.prototype.ngAfterViewInit = function () {
        this.calendar = new Calendar(this.element.nativeElement, this.buildOptions());
        this.calendar.render();
    };
    FullCalendarComponent.prototype.buildOptions = function () {
        var _this = this;
        var options = {};
        OUTPUT_NAMES.forEach(function (outputName) {
            options[outputName] = function () {
                var _a;
                var args = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    args[_i] = arguments[_i];
                }
                (_a = _this[outputName]).emit.apply(_a, __spread(args));
            };
        });
        // do after outputs, so that inputs with same name override
        INPUT_NAMES.forEach(function (inputName) {
            var inputVal = _this[inputName];
            if (inputVal !== undefined) { // unfortunately FC chokes when some props are set to undefined
                if (_this.deepChangeDetection && INPUT_IS_DEEP[inputName]) {
                    inputVal = deepCopy(inputVal);
                    _this.deepCopies[inputName] = inputVal; // side effect!
                }
                options[inputName] = inputVal;
            }
        });
        return options;
    };
    /*
    called before ngOnChanges, allows us to manually detect input changes.
    called much more often than ngOnChanges.
    */
    FullCalendarComponent.prototype.ngDoCheck = function () {
        if (this.calendar && this.deepChangeDetection) { // not the initial render AND we do deep-mutation checks
            var deepCopies = this.deepCopies;
            for (var inputName in INPUT_IS_DEEP) {
                if (INPUT_IS_DEEP.hasOwnProperty(inputName)) {
                    var inputVal = this[inputName];
                    if (inputVal !== undefined) { // unfortunately FC chokes when some props are set to undefined
                        if (!deepEqual(inputVal, deepCopies[inputName])) {
                            var copy = deepCopy(inputVal);
                            deepCopies[inputName] = copy;
                            this.dirtyProps[inputName] = copy;
                        }
                    }
                }
            }
        }
    };
    /*
    called with confirmed changes to input references
    */
    FullCalendarComponent.prototype.ngOnChanges = function (changes) {
        if (this.calendar) { // not the initial render
            for (var inputName in changes) {
                if (changes.hasOwnProperty(inputName)) {
                    if (this.deepCopies[inputName] === undefined) { // not already handled in ngDoCheck
                        this.dirtyProps[inputName] = changes[inputName].currentValue;
                    }
                }
            }
        }
    };
    FullCalendarComponent.prototype.ngAfterContentChecked = function () {
        var dirtyProps = this.dirtyProps; // hold on to reference before clearing
        if (Object.keys(dirtyProps).length > 0) {
            this.dirtyProps = {}; // clear first, in case the rerender causes new dirtiness
            this.calendar.mutateOptions(dirtyProps, [], false, deepEqual);
        }
    };
    FullCalendarComponent.prototype.ngOnDestroy = function () {
        if (this.calendar) {
            this.calendar.destroy();
        }
        this.calendar = null;
    };
    FullCalendarComponent.prototype.getApi = function () {
        return this.calendar;
    };
    FullCalendarComponent.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], FullCalendarComponent.prototype, "deepChangeDetection", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "header", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "footer", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "customButtons", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "buttonIcons", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], FullCalendarComponent.prototype, "themeSystem", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "bootstrapFontAwesome", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], FullCalendarComponent.prototype, "firstDay", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], FullCalendarComponent.prototype, "dir", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], FullCalendarComponent.prototype, "weekends", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Array)
    ], FullCalendarComponent.prototype, "hiddenDays", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], FullCalendarComponent.prototype, "fixedWeekCount", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], FullCalendarComponent.prototype, "weekNumbers", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], FullCalendarComponent.prototype, "weekNumbersWithinDays", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "weekNumberCalculation", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "businessHours", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], FullCalendarComponent.prototype, "showNonCurrentDates", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "height", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "contentHeight", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], FullCalendarComponent.prototype, "aspectRatio", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], FullCalendarComponent.prototype, "handleWindowResize", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], FullCalendarComponent.prototype, "windowResizeDelay", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "eventLimit", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "eventLimitClick", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "timeZone", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "now", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], FullCalendarComponent.prototype, "defaultView", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], FullCalendarComponent.prototype, "allDaySlot", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], FullCalendarComponent.prototype, "allDayText", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "slotDuration", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "slotLabelFormat", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "slotLabelInterval", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "snapDuration", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "scrollTime", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "minTime", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "maxTime", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], FullCalendarComponent.prototype, "slotEventOverlap", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "listDayFormat", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "listDayAltFormat", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], FullCalendarComponent.prototype, "noEventsMessage", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "defaultDate", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], FullCalendarComponent.prototype, "nowIndicator", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "visibleRange", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "validRange", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "dateIncrement", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], FullCalendarComponent.prototype, "dateAlignment", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "duration", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], FullCalendarComponent.prototype, "dayCount", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Array)
    ], FullCalendarComponent.prototype, "locales", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "locale", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "eventTimeFormat", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], FullCalendarComponent.prototype, "columnHeader", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "columnHeaderFormat", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "columnHeaderText", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "columnHeaderHtml", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "titleFormat", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], FullCalendarComponent.prototype, "weekLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], FullCalendarComponent.prototype, "displayEventTime", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], FullCalendarComponent.prototype, "displayEventEnd", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "eventLimitText", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "dayPopoverFormat", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], FullCalendarComponent.prototype, "navLinks", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], FullCalendarComponent.prototype, "selectable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], FullCalendarComponent.prototype, "selectMirror", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], FullCalendarComponent.prototype, "unselectAuto", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], FullCalendarComponent.prototype, "unselectCancel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "defaultAllDayEventDuration", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "defaultTimedEventDuration", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], FullCalendarComponent.prototype, "cmdFormatter", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], FullCalendarComponent.prototype, "defaultRangeSeparator", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "selectConstraint", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "selectOverlap", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "selectAllow", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], FullCalendarComponent.prototype, "selectMinDistance", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], FullCalendarComponent.prototype, "editable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], FullCalendarComponent.prototype, "eventStartEditable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], FullCalendarComponent.prototype, "eventDurationEditable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "eventConstraint", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "eventOverlap", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "eventAllow", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "eventClassName", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "eventClassNames", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], FullCalendarComponent.prototype, "eventBackgroundColor", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], FullCalendarComponent.prototype, "eventBorderColor", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], FullCalendarComponent.prototype, "eventTextColor", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], FullCalendarComponent.prototype, "eventColor", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "events", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Array)
    ], FullCalendarComponent.prototype, "eventSources", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], FullCalendarComponent.prototype, "allDayDefault", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], FullCalendarComponent.prototype, "startParam", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], FullCalendarComponent.prototype, "endParam", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], FullCalendarComponent.prototype, "lazyFetching", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "nextDayThreshold", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "eventOrder", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], FullCalendarComponent.prototype, "rerenderDelay", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], FullCalendarComponent.prototype, "dragRevertDuration", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], FullCalendarComponent.prototype, "dragScroll", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], FullCalendarComponent.prototype, "longPressDelay", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], FullCalendarComponent.prototype, "eventLongPressDelay", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], FullCalendarComponent.prototype, "droppable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "dropAccept", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "eventDataTransform", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], FullCalendarComponent.prototype, "allDayMaintainDuration", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], FullCalendarComponent.prototype, "eventResizableFromStart", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], FullCalendarComponent.prototype, "timeGridEventMinHeight", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], FullCalendarComponent.prototype, "allDayHtml", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], FullCalendarComponent.prototype, "eventDragMinDistance", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "eventSourceFailure", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "eventSourceSuccess", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], FullCalendarComponent.prototype, "forceEventDuration", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], FullCalendarComponent.prototype, "progressiveEventRendering", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], FullCalendarComponent.prototype, "selectLongPressDelay", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], FullCalendarComponent.prototype, "timeZoneParam", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], FullCalendarComponent.prototype, "titleRangeSeparator", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "buttonText", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "views", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Array)
    ], FullCalendarComponent.prototype, "plugins", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], FullCalendarComponent.prototype, "schedulerLicenseKey", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "resources", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], FullCalendarComponent.prototype, "resourceLabelText", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "resourceOrder", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "filterResourcesWithEvents", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "resourceText", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "resourceGroupField", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "resourceGroupText", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "resourceAreaWidth", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "resourceColumns", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "resourcesInitiallyExpanded", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "slotWidth", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "datesAboveResources", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], FullCalendarComponent.prototype, "googleCalendarApiKey", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], FullCalendarComponent.prototype, "refetchResourcesOnNavigate", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], FullCalendarComponent.prototype, "eventResourceEditable", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "windowResize", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "dateClick", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "eventClick", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "eventMouseEnter", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "eventMouseLeave", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "select", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "unselect", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "loading", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "eventPositioned", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "eventDragStart", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "eventDragStop", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "eventDrop", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "eventResizeStart", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "eventResizeStop", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "eventResize", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "drop", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "eventReceive", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "eventLeave", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "_destroyed", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "navLinkDayClick", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "navLinkWeekClick", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "viewSkeletonRender", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "viewSkeletonDestroy", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "datesRender", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "datesDestroy", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "dayRender", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "eventRender", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "eventDestroy", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], FullCalendarComponent.prototype, "resourceRender", void 0);
    FullCalendarComponent = __decorate([
        Component({
            selector: 'full-calendar',
            template: ''
        }),
        __metadata("design:paramtypes", [ElementRef])
    ], FullCalendarComponent);
    return FullCalendarComponent;
}());

var FullCalendarModule = /** @class */ (function () {
    function FullCalendarModule() {
    }
    FullCalendarModule = __decorate([
        NgModule({
            declarations: [FullCalendarComponent],
            imports: [],
            exports: [FullCalendarComponent]
        })
    ], FullCalendarModule);
    return FullCalendarModule;
}());

/*
 * Public API Surface of fullcalendar
 */

/**
 * Generated bundle index. Do not edit.
 */

export { FullCalendarComponent, FullCalendarModule };
//# sourceMappingURL=fullcalendar-angular.js.map
