{"version":3,"file":"ng-bootstrap-datetime-angular.js","sources":["ng://ng-bootstrap-datetime-angular/lib/ng-bootstrap-datetime-angular.service.ts","ng://ng-bootstrap-datetime-angular/lib/ng-bootstrap-datetime-angular.component.ts","ng://ng-bootstrap-datetime-angular/lib/ng-bootstrap-datetime-angular.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgBootstrapDatetimeAngularService {\n\n  constructor() { }\n}\n","import {\n  Component,\n  OnInit,\n  Input,\n  forwardRef,\n  ViewChild,\n  AfterViewInit,\n  Injector\n} from '@angular/core';\nimport {\n  NgbTimeStruct,\n  NgbDateStruct,\n  NgbPopoverConfig,\n  NgbPopover,\n  NgbDatepicker\n} from '@ng-bootstrap/ng-bootstrap';\nimport {\n  NG_VALUE_ACCESSOR,\n  ControlValueAccessor,\n  NgControl\n} from '@angular/forms';\nimport { DatePipe } from '@angular/common';\nimport { noop } from 'rxjs';\nimport { IfStmt } from '@angular/compiler';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\n@Component({\n  selector: 'ng-bootstrap-datetime-angular',\n  templateUrl: './ng-bootstrap-datetime-angular.component.html',\n  styles: [],\n  providers: [\n    DatePipe,\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NgBootstrapDatetimeAngularComponent),\n      multi: true\n    }\n  ]\n})\nexport class NgBootstrapDatetimeAngularComponent  implements ControlValueAccessor, OnInit, AfterViewInit {\n \n  @Input()\n  inputDatetimeFormat = 'd/M/yyyy H:mm:ss';\n  @Input()\n  placeholder: string = \"\";\n  @Input()\n  hourStep = 1;\n  @Input()\n  minuteStep = 15;\n  @Input()\n  secondStep = 30;\n  @Input()\n  seconds = true;\n\n  @Input()\n  disabled = false;\n\n  @ViewChild(NgbDatepicker, null)\n  private dp: NgbDatepicker;\n\n  @ViewChild(NgbPopover, null)\n  private popover: NgbPopover;\n\n  private onTouched: () => void = noop;\n  private onChange: (_: any) => void = noop;\n\n  public ngControl: NgControl;\n\n  dateStruct: NgbDateStruct;\n  timeStruct: NgbTimeStruct;\n  date: Date;\n  \n  constructor(private config: NgbPopoverConfig, private inj: Injector) {\n    config.autoClose = 'outside';\n    config.placement = 'auto';\n  }\n\n  ngOnInit(): void {\n    // tslint:disable-next-line: deprecation\n    this.ngControl = this.inj.get(NgControl);\n  }\n\n  ngAfterViewInit(): void {\n  }\n\n  writeValue(newModel: string) {\n    if (newModel) {\n      const myDate = moment(newModel).toDate();\n\n      this.dateStruct = {\n        year: myDate.getFullYear(),\n        month: myDate.getMonth() + 1,\n        day: myDate.getDate()\n      };\n\n      this.timeStruct = {\n        hour: myDate.getHours(),\n        minute: myDate.getMinutes(),\n        second: myDate.getSeconds()\n      };\n\n      this.setDateStringModel();\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  onInputChange($event: any) {}\n\n  onDateChange(event: NgbDateStruct) {\n    this.setDateStringModel();\n  }\n\n  onTimeChange(event: NgbTimeStruct) {\n    this.setDateStringModel();\n  }\n\n  setDateStringModel() {\n    if (!this.timeStruct) {\n      const dateA = new Date();\n      this.timeStruct = {\n        hour: dateA.getHours(),\n        minute: dateA.getMinutes(),\n        second: dateA.getSeconds()\n      };\n    }\n\n    if (this.dateStruct) {\n      this.date = new Date(\n        this.dateStruct.year,\n        this.dateStruct.month - 1,\n        this.dateStruct.day,\n        this.timeStruct.hour,\n        this.timeStruct.minute,\n        this.timeStruct.second\n      );\n\n      this.onChange(this.date);\n    }\n  }\n\n  inputBlur($event) {\n    this.onTouched();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { NgBootstrapDatetimeAngularComponent } from './ng-bootstrap-datetime-angular.component';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\n@NgModule({\n  declarations: [NgBootstrapDatetimeAngularComponent],\n  imports: [\n    FormsModule,\n    NgbModule,\n    CommonModule,\n    ReactiveFormsModule\n  ],\n  exports: [NgBootstrapDatetimeAngularComponent]\n})\nexport class NgBootstrapDatetimeAngularModule { }\n"],"names":[],"mappings":"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"}