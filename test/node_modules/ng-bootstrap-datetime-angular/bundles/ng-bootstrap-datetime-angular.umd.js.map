{"version":3,"file":"ng-bootstrap-datetime-angular.umd.js","sources":["ng://ng-bootstrap-datetime-angular/lib/ng-bootstrap-datetime-angular.service.ts","ng://ng-bootstrap-datetime-angular/lib/ng-bootstrap-datetime-angular.component.ts","ng://ng-bootstrap-datetime-angular/lib/ng-bootstrap-datetime-angular.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgBootstrapDatetimeAngularService {\n\n  constructor() { }\n}\n","import {\n  Component,\n  OnInit,\n  Input,\n  forwardRef,\n  ViewChild,\n  AfterViewInit,\n  Injector\n} from '@angular/core';\nimport {\n  NgbTimeStruct,\n  NgbDateStruct,\n  NgbPopoverConfig,\n  NgbPopover,\n  NgbDatepicker\n} from '@ng-bootstrap/ng-bootstrap';\nimport {\n  NG_VALUE_ACCESSOR,\n  ControlValueAccessor,\n  NgControl\n} from '@angular/forms';\nimport { DatePipe } from '@angular/common';\nimport { noop } from 'rxjs';\nimport { IfStmt } from '@angular/compiler';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\n@Component({\n  selector: 'ng-bootstrap-datetime-angular',\n  templateUrl: './ng-bootstrap-datetime-angular.component.html',\n  styles: [],\n  providers: [\n    DatePipe,\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NgBootstrapDatetimeAngularComponent),\n      multi: true\n    }\n  ]\n})\nexport class NgBootstrapDatetimeAngularComponent  implements ControlValueAccessor, OnInit, AfterViewInit {\n \n  @Input()\n  inputDatetimeFormat = 'd/M/yyyy H:mm:ss';\n  @Input()\n  placeholder: string = \"\";\n  @Input()\n  hourStep = 1;\n  @Input()\n  minuteStep = 15;\n  @Input()\n  secondStep = 30;\n  @Input()\n  seconds = true;\n\n  @Input()\n  disabled = false;\n\n  @ViewChild(NgbDatepicker, null)\n  private dp: NgbDatepicker;\n\n  @ViewChild(NgbPopover, null)\n  private popover: NgbPopover;\n\n  private onTouched: () => void = noop;\n  private onChange: (_: any) => void = noop;\n\n  public ngControl: NgControl;\n\n  dateStruct: NgbDateStruct;\n  timeStruct: NgbTimeStruct;\n  date: Date;\n  \n  constructor(private config: NgbPopoverConfig, private inj: Injector) {\n    config.autoClose = 'outside';\n    config.placement = 'auto';\n  }\n\n  ngOnInit(): void {\n    // tslint:disable-next-line: deprecation\n    this.ngControl = this.inj.get(NgControl);\n  }\n\n  ngAfterViewInit(): void {\n  }\n\n  writeValue(newModel: string) {\n    if (newModel) {\n      const myDate = moment(newModel).toDate();\n\n      this.dateStruct = {\n        year: myDate.getFullYear(),\n        month: myDate.getMonth() + 1,\n        day: myDate.getDate()\n      };\n\n      this.timeStruct = {\n        hour: myDate.getHours(),\n        minute: myDate.getMinutes(),\n        second: myDate.getSeconds()\n      };\n\n      this.setDateStringModel();\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  onInputChange($event: any) {}\n\n  onDateChange(event: NgbDateStruct) {\n    this.setDateStringModel();\n  }\n\n  onTimeChange(event: NgbTimeStruct) {\n    this.setDateStringModel();\n  }\n\n  setDateStringModel() {\n    if (!this.timeStruct) {\n      const dateA = new Date();\n      this.timeStruct = {\n        hour: dateA.getHours(),\n        minute: dateA.getMinutes(),\n        second: dateA.getSeconds()\n      };\n    }\n\n    if (this.dateStruct) {\n      this.date = new Date(\n        this.dateStruct.year,\n        this.dateStruct.month - 1,\n        this.dateStruct.day,\n        this.timeStruct.hour,\n        this.timeStruct.minute,\n        this.timeStruct.second\n      );\n\n      this.onChange(this.date);\n    }\n  }\n\n  inputBlur($event) {\n    this.onTouched();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { NgBootstrapDatetimeAngularComponent } from './ng-bootstrap-datetime-angular.component';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\n@NgModule({\n  declarations: [NgBootstrapDatetimeAngularComponent],\n  imports: [\n    FormsModule,\n    NgbModule,\n    CommonModule,\n    ReactiveFormsModule\n  ],\n  exports: [NgBootstrapDatetimeAngularComponent]\n})\nexport class NgBootstrapDatetimeAngularModule { }\n"],"names":["Injectable","noop","NgControl","Component","DatePipe","NG_VALUE_ACCESSOR","forwardRef","NgbPopoverConfig","Injector","Input","ViewChild","NgbDatepicker","NgbPopover","NgModule","FormsModule","NgbModule","CommonModule","ReactiveFormsModule"],"mappings":"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"}