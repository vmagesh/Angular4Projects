(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@ng-bootstrap/ng-bootstrap'), require('@angular/forms'), require('@angular/common'), require('rxjs'), require('moment')) :
    typeof define === 'function' && define.amd ? define('ng-bootstrap-datetime-angular', ['exports', '@angular/core', '@ng-bootstrap/ng-bootstrap', '@angular/forms', '@angular/common', 'rxjs', 'moment'], factory) :
    (global = global || self, factory(global['ng-bootstrap-datetime-angular'] = {}, global.ng.core, global.ngBootstrap, global.ng.forms, global.ng.common, global.rxjs, global.moment_));
}(this, (function (exports, core, ngBootstrap, forms, common, rxjs, moment_) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/ng-bootstrap-datetime-angular.service.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var NgBootstrapDatetimeAngularService = /** @class */ (function () {
        function NgBootstrapDatetimeAngularService() {
        }
        NgBootstrapDatetimeAngularService.decorators = [
            { type: core.Injectable, args: [{
                        providedIn: 'root'
                    },] }
        ];
        /** @nocollapse */
        NgBootstrapDatetimeAngularService.ctorParameters = function () { return []; };
        /** @nocollapse */ NgBootstrapDatetimeAngularService.ngInjectableDef = core.ɵɵdefineInjectable({ factory: function NgBootstrapDatetimeAngularService_Factory() { return new NgBootstrapDatetimeAngularService(); }, token: NgBootstrapDatetimeAngularService, providedIn: "root" });
        return NgBootstrapDatetimeAngularService;
    }());

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/ng-bootstrap-datetime-angular.component.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /** @type {?} */
    var moment = moment_;
    var NgBootstrapDatetimeAngularComponent = /** @class */ (function () {
        function NgBootstrapDatetimeAngularComponent(config, inj) {
            this.config = config;
            this.inj = inj;
            this.inputDatetimeFormat = 'd/M/yyyy H:mm:ss';
            this.placeholder = "";
            this.hourStep = 1;
            this.minuteStep = 15;
            this.secondStep = 30;
            this.seconds = true;
            this.disabled = false;
            this.onTouched = rxjs.noop;
            this.onChange = rxjs.noop;
            config.autoClose = 'outside';
            config.placement = 'auto';
        }
        /**
         * @return {?}
         */
        NgBootstrapDatetimeAngularComponent.prototype.ngOnInit = /**
         * @return {?}
         */
        function () {
            // tslint:disable-next-line: deprecation
            this.ngControl = this.inj.get(forms.NgControl);
        };
        /**
         * @return {?}
         */
        NgBootstrapDatetimeAngularComponent.prototype.ngAfterViewInit = /**
         * @return {?}
         */
        function () {
        };
        /**
         * @param {?} newModel
         * @return {?}
         */
        NgBootstrapDatetimeAngularComponent.prototype.writeValue = /**
         * @param {?} newModel
         * @return {?}
         */
        function (newModel) {
            if (newModel) {
                /** @type {?} */
                var myDate = moment(newModel).toDate();
                this.dateStruct = {
                    year: myDate.getFullYear(),
                    month: myDate.getMonth() + 1,
                    day: myDate.getDate()
                };
                this.timeStruct = {
                    hour: myDate.getHours(),
                    minute: myDate.getMinutes(),
                    second: myDate.getSeconds()
                };
                this.setDateStringModel();
            }
        };
        /**
         * @param {?} fn
         * @return {?}
         */
        NgBootstrapDatetimeAngularComponent.prototype.registerOnChange = /**
         * @param {?} fn
         * @return {?}
         */
        function (fn) {
            this.onChange = fn;
        };
        /**
         * @param {?} fn
         * @return {?}
         */
        NgBootstrapDatetimeAngularComponent.prototype.registerOnTouched = /**
         * @param {?} fn
         * @return {?}
         */
        function (fn) {
            this.onTouched = fn;
        };
        /**
         * @param {?} $event
         * @return {?}
         */
        NgBootstrapDatetimeAngularComponent.prototype.onInputChange = /**
         * @param {?} $event
         * @return {?}
         */
        function ($event) { };
        /**
         * @param {?} event
         * @return {?}
         */
        NgBootstrapDatetimeAngularComponent.prototype.onDateChange = /**
         * @param {?} event
         * @return {?}
         */
        function (event) {
            this.setDateStringModel();
        };
        /**
         * @param {?} event
         * @return {?}
         */
        NgBootstrapDatetimeAngularComponent.prototype.onTimeChange = /**
         * @param {?} event
         * @return {?}
         */
        function (event) {
            this.setDateStringModel();
        };
        /**
         * @return {?}
         */
        NgBootstrapDatetimeAngularComponent.prototype.setDateStringModel = /**
         * @return {?}
         */
        function () {
            if (!this.timeStruct) {
                /** @type {?} */
                var dateA = new Date();
                this.timeStruct = {
                    hour: dateA.getHours(),
                    minute: dateA.getMinutes(),
                    second: dateA.getSeconds()
                };
            }
            if (this.dateStruct) {
                this.date = new Date(this.dateStruct.year, this.dateStruct.month - 1, this.dateStruct.day, this.timeStruct.hour, this.timeStruct.minute, this.timeStruct.second);
                this.onChange(this.date);
            }
        };
        /**
         * @param {?} $event
         * @return {?}
         */
        NgBootstrapDatetimeAngularComponent.prototype.inputBlur = /**
         * @param {?} $event
         * @return {?}
         */
        function ($event) {
            this.onTouched();
        };
        NgBootstrapDatetimeAngularComponent.decorators = [
            { type: core.Component, args: [{
                        selector: 'ng-bootstrap-datetime-angular',
                        template: "<div class=\"input-group mr-2\">\r\n  <input\r\n    [placeholder]=\"placeholder\"\r\n    [ngClass]=\"ngControl?.valid ? 'ng-valid' : 'ng-invalid'\"\r\n    class=\"form-control\"\r\n    (blur)=\"inputBlur($event)\"\r\n    [ngModel]=\"date | date: inputDatetimeFormat\"\r\n    (change)=\"onInputChange($event)\"\r\n    [disabled]=\"disabled\"\r\n  />\r\n\r\n  <div class=\"input-group-append\">\r\n    <button\r\n      class=\"btn btn-outline-secondary\"\r\n      [ngbPopover]=\"calendarContent\"\r\n      [disabled]=\"disabled\"\r\n      type=\"button\"\r\n    >\r\n      <i class=\"fa fa-calendar\"></i>\r\n    </button>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #calendarContent>\r\n  <div>\r\n    <div>\r\n      <ngb-datepicker\r\n        #dp\r\n        name=\"datepicker\"\r\n        [(ngModel)]=\"dateStruct\"\r\n        (ngModelChange)=\"onDateChange($event)\"\r\n      ></ngb-datepicker>\r\n      <ngb-timepicker\r\n        meridian=\"true\"\r\n        [seconds]=\"false\"\r\n        #tp\r\n        name=\"timepicker\"\r\n        [(ngModel)]=\"timeStruct\"\r\n        (ngModelChange)=\"onTimeChange($event)\"\r\n        [seconds]=\"seconds\"\r\n        [hourStep]=\"hourStep\"\r\n        [minuteStep]=\"minuteStep\"\r\n      ></ngb-timepicker>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n",
                        providers: [
                            common.DatePipe,
                            {
                                provide: forms.NG_VALUE_ACCESSOR,
                                useExisting: core.forwardRef((/**
                                 * @return {?}
                                 */
                                function () { return NgBootstrapDatetimeAngularComponent; })),
                                multi: true
                            }
                        ]
                    }] }
        ];
        /** @nocollapse */
        NgBootstrapDatetimeAngularComponent.ctorParameters = function () { return [
            { type: ngBootstrap.NgbPopoverConfig },
            { type: core.Injector }
        ]; };
        NgBootstrapDatetimeAngularComponent.propDecorators = {
            inputDatetimeFormat: [{ type: core.Input }],
            placeholder: [{ type: core.Input }],
            hourStep: [{ type: core.Input }],
            minuteStep: [{ type: core.Input }],
            secondStep: [{ type: core.Input }],
            seconds: [{ type: core.Input }],
            disabled: [{ type: core.Input }],
            dp: [{ type: core.ViewChild, args: [ngBootstrap.NgbDatepicker, null,] }],
            popover: [{ type: core.ViewChild, args: [ngBootstrap.NgbPopover, null,] }]
        };
        return NgBootstrapDatetimeAngularComponent;
    }());
    if (false) {
        /** @type {?} */
        NgBootstrapDatetimeAngularComponent.prototype.inputDatetimeFormat;
        /** @type {?} */
        NgBootstrapDatetimeAngularComponent.prototype.placeholder;
        /** @type {?} */
        NgBootstrapDatetimeAngularComponent.prototype.hourStep;
        /** @type {?} */
        NgBootstrapDatetimeAngularComponent.prototype.minuteStep;
        /** @type {?} */
        NgBootstrapDatetimeAngularComponent.prototype.secondStep;
        /** @type {?} */
        NgBootstrapDatetimeAngularComponent.prototype.seconds;
        /** @type {?} */
        NgBootstrapDatetimeAngularComponent.prototype.disabled;
        /**
         * @type {?}
         * @private
         */
        NgBootstrapDatetimeAngularComponent.prototype.dp;
        /**
         * @type {?}
         * @private
         */
        NgBootstrapDatetimeAngularComponent.prototype.popover;
        /**
         * @type {?}
         * @private
         */
        NgBootstrapDatetimeAngularComponent.prototype.onTouched;
        /**
         * @type {?}
         * @private
         */
        NgBootstrapDatetimeAngularComponent.prototype.onChange;
        /** @type {?} */
        NgBootstrapDatetimeAngularComponent.prototype.ngControl;
        /** @type {?} */
        NgBootstrapDatetimeAngularComponent.prototype.dateStruct;
        /** @type {?} */
        NgBootstrapDatetimeAngularComponent.prototype.timeStruct;
        /** @type {?} */
        NgBootstrapDatetimeAngularComponent.prototype.date;
        /**
         * @type {?}
         * @private
         */
        NgBootstrapDatetimeAngularComponent.prototype.config;
        /**
         * @type {?}
         * @private
         */
        NgBootstrapDatetimeAngularComponent.prototype.inj;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/ng-bootstrap-datetime-angular.module.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var NgBootstrapDatetimeAngularModule = /** @class */ (function () {
        function NgBootstrapDatetimeAngularModule() {
        }
        NgBootstrapDatetimeAngularModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [NgBootstrapDatetimeAngularComponent],
                        imports: [
                            forms.FormsModule,
                            ngBootstrap.NgbModule,
                            common.CommonModule,
                            forms.ReactiveFormsModule
                        ],
                        exports: [NgBootstrapDatetimeAngularComponent]
                    },] }
        ];
        return NgBootstrapDatetimeAngularModule;
    }());

    exports.NgBootstrapDatetimeAngularComponent = NgBootstrapDatetimeAngularComponent;
    exports.NgBootstrapDatetimeAngularModule = NgBootstrapDatetimeAngularModule;
    exports.NgBootstrapDatetimeAngularService = NgBootstrapDatetimeAngularService;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=ng-bootstrap-datetime-angular.umd.js.map
